В общем на проект такие мыли
Этап I: QueryBuilder.
1. СОздать проект в GitHub
2. Разместить файл index.php
3. СОздать и Подцепить базу чз компонент QueryBuilder.php
4. Вынести отдельно строку подключения к базе. Это будет компонент подключения к базе. 
   т.о. не нужно будет постоянно ее прописывать
   
   Для этого я вначале создаю класс Connection внутри QueryBuilder, приватную $pdo  в классе QueryBuilder
   И думаю как туда его подцепить

5. убедиться что все работает. Вывести представление в view/index.view.php
   
   18 мая 21
   Написал в Чат Рахиму. Не понимаю в чем суть: зачем создавать класс, свой, когда мы уже использовали QueryBuilder.php
   Получил ответ. Все правильно -> готовый можно брать, главное создать все остальное по своему и понять как компонеты
   между собой соединяются.
   Двигаюсь дальше
   
   20 мая 21
   Я не понимаю что произошло.Я пподключил. Затем все удалил. Затем начал все заново делать. ЧТобы наизусть все выучить.
   И вот те на..Ничего не работает. Два дня прокопался. Потом все удалил. Все начал заново и заработало.
   Все как бы тоже самое. Ну раз не работало, значит что то не то.
   Зато я наизусть!
   Подцепил QueryBuilder. Навсегда разобрался с конструктором и зачем он нужен.
   Двигаюсь дальше
   Думаю как подцепить компонент Connection.php
   Запилил свой Connection и config. Без просмотра видео.
   АААА!!!
   Теперь все понятно как формируется  QueryBuilder.php !!
   КРУТЯК!!!!
   
   Вечерем перед сном
   Сделал комментарии как бы для других, на самом деле перед сном для себя все прописал и очень хорошо легло в 
   голове. Можно сказать СТЕКОМ уложилось в мозг.
   Немного перфекционизма, не давала покоя переменная paramToConnect.
   Правильней все таки paramsToConnect..С трудом выдержал 2 часа, пока ехал до дома чтобы исправить.
   Уверен, я ок.
   

Этап II : Роутер
0. Разобраться c htaccess.
    - посмотреть видео
	- навсегда закрепить смысл переменных MOD_REWRITE
1. Перехватываем глобальную переменную REQUEST_ и настраиваем роутинг для основных страниц
2. Настройка роутера для динамических страниц.
3. Настроить роутер для редактировани/добавления/удаления
	
24 мая 21
Настроил роутер для базовых страниц. 
Что я понял: 
- до конца уяснил, зачем нужно в отдельной папке /public прятать файл index.php
- когда переписывал схему BROWSER-> /homepage -> /index.php Досконально разобрался в сути MVC

25 мая 21
И так..переходим к динамическому роутингу. ЧТобы у нас /show.php?id=1 перенаправлялся на какой - то другой например 
/show/id/1...
Первым делом встроим вообще страницу обычную в "/show.php?id=1" => 	'/controllers/show.php' - ТУТ Нет вопросов - Готово

Теперь сделаем так, чтобы все страницы динамически обрабатывались и отправлялись через роутер.
Для этого перехватываем $_GET массив. извлекаем из него ИМЯ_ФАЙЛА и $id отправляем в функцию.
Функция f_show($id,$getFileName)  - просто возвращает нам нужный путь с файлом.

Переписываем роутинг для оставшихся EDIT,UPDATE,DELETE,ADD,STORE ~.php. Формируем для них MVC

Теперь все что можнно отправляем в класс
Все отправил в класс. Возник нюанс. Я как то с конструктором не подразобрался. и не совсем понятно, здесь нужен статичный метод
или можно обойтись обычным. Сделал без конструктора и обычным методом.


- - - - 
3. Validator - валидация входящих данных

4. Flash - основанный на сессиях компонент, для вывода флеш сообщений/уведомлений

2 Этап Настройка Редактирования,Добавления,Удаления новых записей
1.Создаю файл для редактирования 
3. Этап